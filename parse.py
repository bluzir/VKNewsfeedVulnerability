import requests
import datetime
import time

database = {}


class Request:
    #http://vk.cc/2VN6UJ
    token = ''
    url = "https://api.vk.com/method/"

    def __init__(self, method, params = {}):
        self.method = method
        self.params = params

    def make_request(self):
        r = requests.get(self.url+self.method, params=self.params)
        response = r.json()
        return response


class Date:

    def __init__(self, years):
        self.years = years
        self.start = None
        self.end = None


    def get_interval(self):
        interval = {}
        start = datetime.datetime.now() - datetime.timedelta(days=self.years*365)
        end = start + datetime.timedelta(days=1)
        start_format  = start.strftime('%d/%m/%Y')
        end_format  = end.strftime('%d/%m/%Y')
        start_timestamp = time.mktime(datetime.datetime.strptime(start_format, '%d/%m/%Y').timetuple())
        end_timestamp = time.mktime(datetime.datetime.strptime(end_format, '%d/%m/%Y').timetuple())
        self.start = int((str(start_timestamp)[:-2]))
        self.end = int((str(end_timestamp)[:-2]))


getWall = Request("execute.getWall")
getWall.params['access_token'] = Request.token
getWall.params['v'] = '5.24'
getWall.params['filter'] = 'owner'


getFriends = Request("friends.get")
getFriends.params['access_token'] = Request.token

getPost = Request("wall.get")
getPost.params['access_token'] = Request.token
getPost.params['v'] = '5.24'
getPost.params['filter'] = 'owner'
getPost.params['count'] = 100


friend_list = getFriends.make_request()['response']['items']
print('Найдено %d друзей' % (len(friend_list)))


def get_posts(friend):
    start_time = int("%.0f" % time.time())
    getWall.params['id'] = friend
    getWall.params['offset'] = 0
    getWall.params['filter'] = 'owner'
    response = getWall.make_request()['response']
    count = response['count']
    offset = response['offset']
    posts = response['posts']
    getPost.params['id'] = friend
    getWall.params['offset'] = count-1

    while int(offset) < count:
        print('Постов %d из %d' % (offset, count))
        getWall.params['offset'] = str(offset)
        response = getWall.make_request()['response']
        posts = posts + response['posts']
        offset = response['offset']
        getWall.params['offset'] = offset
    end_time = int("%.0f" % time.time())
    print('На друга было потрачено %d секунд' % (end_time-start_time))
    return posts

interval = Date(3)
interval.get_interval()


def check_oldfag(response):
    count = response['count']
    if count>0:
        getPost.params['offset'] = int(count)-1
        resp = getPost.make_request()['response']
        if resp['items'][0]['date'] < int(interval.end):
            time.sleep(0.5)
            return True


def check_date(item):
    date = item['date']
    if interval.start < date < interval.end:
        return True

def work():
    start = int(time.time())
    for friend in friend_list:
        database[friend] = []
        start_time = int(time.time())
        getPost.params['owner_id'] = friend
        try:
            resp = getPost.make_request()['response']
        except KeyError:
            print(resp)
            print('Ошибка API. Пропускаем')
            break
        count = int(resp['count'])
        print("Друг: id%s\n Постов: %s" % (friend, count))
        if check_oldfag(resp):
            if count > 500:
                offset = count//2
                step = offset//2
                while step > 100:
                    print("Step:%s Offset:%s" % (step, offset))
                    getPost.params['offset'] = offset
                    resp = getPost.make_request()['response']
                    print(resp)
                    date = int(resp['items'][0]['date'])
                    if date < interval.end:
                        offset -= step
                    else:
                        offset += step
                    step //= 2
                    time.sleep(0.5)
                getPost.params['offset'] = offset
                resp = getPost.make_request()['response']
            else:
                print('Используем execute')
                getWall.params['owner_id'] = friend
                resp = getWall.make_request()['response']
                print(resp)
            for item in resp['items']:
                if check_date(item):
                    database[friend].append(item)

                    print('https://vk.com/wall%s_%s' % (friend, item['id']))


        print('На друга потрачено %d секунд(ы)' % (int(time.time()) - start_time))

        time.sleep(0.5)
        spent = int(time.time()) - start
    print('Работа завершена')
    print('Всего было потрачено минут: %d' % (spent/60))
    print('В среднем по %d секунд(ы) на друга' % (spent/int(len(friend_list))))
work()
print(database)
