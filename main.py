__author__ = 'Владислав'
import requests
from time import sleep
from datetime import datetime
import sqlite3
conn = sqlite3.connect('publics.db')
c = conn.cursor()
token = '727ec5834ed90d17d41590b2b7b680d77c7566a0379359cb01da2fb7a8c66b9bf065498181be5eea7cb9b' # http://vk.cc/2VN6UJ
publics = [78047404, 74575386, 61604817] # список пабликов для парсинга
list_id = None # для списков новостей
count = 10 # сколько постов на паблик будем парсить (лимит 2 недели)

def create_table(id): # создаем таблицу с названием = айди паблика
    pub = id
    c.execute('''CREATE TABLE IF NOT EXISTS '%s'
             (count integer, link text, id integer, date text)''' % (pub))

def create_work_list(target_id): # ета писал хохол
    global list_id
    print('создаем список')
    url = 'https://api.vk.com/method/newsfeed.saveList'
    par = {'title': 'title', 'source_ids': target_id, 'access_token': token}
    request = requests.get(url, params=par)
    request = request.json()
    if 'response' in request:
        list_id = request['response']
    else:
        if 'error' in request and 'error_code' in request['error'] and request['error']['error_code'] == 1170:
            print('у тебя слишком много списков, для работы нужно удалить хотя бы один. сделай это сам')
        else:
            print('неизвестная ошибка')
            print(request)
        exit()
    print ('Список с id:'+str(list_id)+' создан')
    pass

def get_post(x): # newsfeed_get для списка новостей
    url = 'https://api.vk.com/method/newsfeed.get'
    par = {'access_token': token,
           'count': 1,
           'filters': 'post',
           'v': 5.24,
           'start_from': x,
           'source_ids': 'list'+str(list_id) }
    request = requests.get(url, params = par)
    decode = request.json()
    post = decode['response']
    return post

def get_ids(post): # получаем список айди для поста
    profiles = post['profiles']
    ids = []
    for item in profiles:
        id = item['id']
        if id != 94598957:
            id = str(id)
            ids.append(id)
    print (ids)
    return ids

def get_link(post): # получаем ссылку на пост
    content = post['items']
    for item in content:
        source = str(item['source_id'])
        post_id = str(item['post_id'])
        text = item['text']
        date = str(datetime.fromtimestamp(item['date']))
        link = ("http://vk.com/wall%s_%s") % (source, post_id)
        print (link)
    return link

def get_next(post): # получаем параметр next_from для следующего поста
    next = post['next_from']
    return next

def delete_work_list(): # удаляем список новостей после парсинга
    global list_id
    url = 'https://api.vk.com/method/newsfeed.deleteList'
    par = {'list_id': list_id, 'access_token': token}
    request = requests.get(url, params=par)
    print('список с id '+str(list_id)+' удалено')
    pass

def get_result():
    for id in publics:
        create_work_list(-id)
        create_table(id)
        post = get_post(1)
        ids = get_ids(post)
        link = get_link(post)
        next = get_next(post)
        print ("Начинаем парсинг")
        i = 0
        while i < count: # кол-во постов
            i += 1
            post = get_post(next)
            get_ids(post)
            link = get_link(post)
            next = get_next(post)
            sleep(1)
        delete_work_list()
        print ("Парсинг окончен")

get_result()
c.close()
exit()


